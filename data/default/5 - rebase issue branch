⚡  rebase issue branch onto main

// To catch merge conflicts that might otherwise delay your MR, you should rebase your issue branch. Rebasing your issue
// branch keeps it up-to-date with changes that have been merged to origin main since you created your issue branch,
// or since the last time you rebased it.

$[main] git pull // synchronize your 'main' with any remote changes from `origin main` - no changes = no need to rebase!

$[main] git switch issue-id // switch/checkout the issue branch you want to rebase

$[issue-branch] git status // make sure you have no uncommited changes on your issue branch - see `kb 3` if you do

$[issue-branch] git rebase origin/main // add changes you just pulled from `origin main` to your issue branch

⚠️  if you encounter any conflicts, don't panic - follow the instructions, fix the conflicts, and keep in mind you can always abort the rebase and start over

☝️  does the commit log make sense after a successful rebase? espanso trigger: `:log`

$[issue-branch] git push -f // force push required any time you've rebased a branch

⚠️  do not use git commit --amend when you have an active MR
⚠️  the only time you want to rebase a branch with an MR is when you are merging it
