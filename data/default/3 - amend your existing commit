⚡  amend your commit

// We don't want to string together multiple commits that will create a confusing merge request. When possible
// we want all the changes on an issue branch to be reflected in a single commit.

$[issue-branch] git status // confirm the files that have uncommited changes

$[issue-branch] git add -A // stage all the files with changes

$[issue-branch] git log --oneline // confirm the most recent commit on this branch is yours

☝️  espanso trigger: `:log`

⚠️  if the most recent commit is not yours and one created on this issue branch, do not proceed - you may still need to make an initial commit

$[issue-branch] git commit --amend // amend the previous commit

⚠️  to back-out without amending the commit, save a completely empty commit message

☝️  espanso trigger: `:amend`

## commit message template

// use this template and update it each time you run 'git commit --amend'

Commit subject line

Titles to re/publish upon merge

- n/a

Added

- n/a

Changed

- n/a

Fixed

- n/a

Removed

- n/a

☝️  espanso trigger: `:commit`

## example commit message

Add eventing discussion to drift and policy titles

Titles to re/publish upon merge

- Ensuring Approved Packages Are Installed Across System Profiles Using the Drift Service
- Monitoring and Reacting to Configuration Changes Using Policies

Added

- sections on enabling notifications to 'drift-comparison' and 'policies-monitoring'

Changed

- notification configutation details in 'advisor-service-reports'

Fixed

- n/a

Removed

- n/a
